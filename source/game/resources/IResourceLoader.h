//
//  IResourceLoader.h
//  ProjectRetro
//
//  Created by Alex Koukoulas on 29/03/2019.
//


////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#ifndef IResourceLoader_h
#define IResourceLoader_h

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <memory> 
#include <string> 

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

class IResource;

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

class IResourceLoader
{
public:
    virtual ~IResourceLoader() = default;
    IResourceLoader(const IResourceLoader&) = delete;
    const IResourceLoader& operator = (const IResourceLoader&) = delete;
    
    virtual void VInitialize() = 0;    
    virtual std::unique_ptr<IResource> VCreateAndLoadResource(const std::string& path) = 0;

protected:
    IResourceLoader() = default;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#endif /* IResourceLoader.h */
