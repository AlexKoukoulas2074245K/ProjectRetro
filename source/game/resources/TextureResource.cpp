//
//  TextureResource.cpp
//  ProjectRetro
//
//  Created by Alex Koukoulas on 29/03/2019.
//


////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include "TextureResource.h"
#include "../rendering/opengl/Context.h"

#include <cassert>

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

TextureResource::~TextureResource()
{
    GL_CHECK(glDeleteTextures(1, &mGLTextureId));
}

GLuint TextureResource::GetGLTextureId() const
{
    return mGLTextureId;
}

int TextureResource::GetWidth() const
{
    return mWidth;
}

int TextureResource::GetHeight() const
{
    return mHeight;
}

bool TextureResource::HasTransparentPixels() const
{
    return mHasTransparentPixels;
}

const std::vector<Uint32> TextureResource::GetColorSet() const
{
    return mColorset;
}

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

TextureResource::TextureResource
(
    const int width,
    const int height,
    GLuint glTextureId,
    bool hasTransparentPixels,
    const std::vector<Uint32>& colorSet
)
    : mWidth(width)
    , mHeight(height)
    , mGLTextureId(glTextureId)
    , mHasTransparentPixels(hasTransparentPixels)
    , mColorset(colorSet)
{

}

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
