//
//  PewterPokeCenterJigglypuffOverworldFlowState.h
//  ProjectRetro
//
//  Created by Alex Koukoulas on 29/10/2019.
//

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#ifndef PewterPokeCenterJigglypuffOverworldFlowState_h
#define PewterPokeCenterJigglypuffOverworldFlowState_h

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include "BaseOverworldFlowState.h"
#include "../utils/Timer.h"
#include "../../common/utils/MathUtils.h"

#include <string>

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

class PewterPokeCenterJigglypuffOverworldFlowState final: public BaseOverworldFlowState
{
public:
    PewterPokeCenterJigglypuffOverworldFlowState(ecs::World&);
    
    void VUpdate(const float dt) override;
    
private:
    static const std::string JIGGLYPUFF_SONG_MUSIC_NAME;
    static const std::string LEVEL_MUSIC_NAME;
    static const float DIRECTION_CHANGE_DELAY;
    static const int MAX_DIRECTION_CHANGES;
    static const int JIGGLYPUFF_NPC_LEVEL_ENTITY_INDEX;

    Timer mDirectionChangeTimer;
    int mDirectionChangeCounter;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#endif /* PewterPokeCenterJigglypuffOverworldFlowState_h */
