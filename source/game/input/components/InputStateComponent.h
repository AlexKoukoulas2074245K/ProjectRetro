//
//  InputStateComponent.h
//  ProjectRetro
//
//  Created by Alex Koukoulas on 01/04/2019.
//

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#ifndef InputStateComponent_h
#define InputStateComponent_h

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include "../../ECS.h"

#include <SDL_keyboard.h>
#include <unordered_map>
#include <vector>

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

static constexpr int DEFAULT_KEY_COUNT = 512;

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

enum class VirtualActionType
{
    LEFT, RIGHT, UP, DOWN, A, B, START, SELECT
};

enum class VirtualActionInputState
{
    RELEASED, PRESSED, TAPPED
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

class InputStateComponent final: public ecs::IComponent
{
public:
    std::unordered_map<VirtualActionType, VirtualActionInputState> mCurrentInputState = 
    {
        { VirtualActionType::LEFT,   VirtualActionInputState::RELEASED },
        { VirtualActionType::RIGHT,  VirtualActionInputState::RELEASED },
        { VirtualActionType::UP,     VirtualActionInputState::RELEASED },
        { VirtualActionType::DOWN,   VirtualActionInputState::RELEASED },
        { VirtualActionType::A,      VirtualActionInputState::RELEASED },
        { VirtualActionType::B,      VirtualActionInputState::RELEASED },
        { VirtualActionType::START,  VirtualActionInputState::RELEASED },
        { VirtualActionType::SELECT, VirtualActionInputState::RELEASED },
    };

    std::unordered_map<SDL_Scancode, VirtualActionType> mKeybindings = 
    {
        { SDL_SCANCODE_LEFT,      VirtualActionType::LEFT },
        { SDL_SCANCODE_RIGHT,     VirtualActionType::RIGHT },
        { SDL_SCANCODE_UP,        VirtualActionType::UP },
        { SDL_SCANCODE_DOWN,      VirtualActionType::DOWN },
        { SDL_SCANCODE_Z,         VirtualActionType::A },
        { SDL_SCANCODE_X,         VirtualActionType::B },
        { SDL_SCANCODE_RETURN,    VirtualActionType::START },
        { SDL_SCANCODE_BACKSPACE, VirtualActionType::SELECT },
    };

    // Needed for tapped input checks 
    std::vector<unsigned char> mPreviousRawKeyboardState;
    
    bool mHasBeenConsumed = false;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#endif /* InputStateComponent_h */
