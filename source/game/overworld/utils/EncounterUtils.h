//
//  EncounterUtils.h
//  ProjectRetro
//
//  Created by Alex Koukoulas on 18/06/2019.
//


////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#ifndef EncounterUtils_h
#define EncounterUtils_h

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include "../components/LevelModelComponent.h"
#include "../../common/utils/MathUtils.h"
#include "../../common/utils/Logging.h"

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

bool DoesLevelHaveWildEncounters(const LevelModelComponent& levelModelComponent)
{
    return levelModelComponent.mWildEncounters.size() > 0;
}

bool WildEncounterRNGTriggered(const LevelModelComponent& levelModelComponent)
{
    return levelModelComponent.mEncounterDensity >= math::RandomInt(1, 256);
}

const WildEncounterInfo& SelectRandomWildEncounter(const LevelModelComponent& levelModelComponent)
{
    const auto randomEncounterIndex  = math::RandomInt(1, 256);
    auto encounterRateAccumulator    = 0;

    for (const auto& encounterInfo: levelModelComponent.mWildEncounters)
    {
        encounterRateAccumulator += encounterInfo.mRate;
        if (randomEncounterIndex <= encounterRateAccumulator)
        {            
            return encounterInfo;
        }
    }

    assert(false && "Encounter rate accumulator larger than sum of encounter rates");
    return levelModelComponent.mWildEncounters[0];
}

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#endif /* EncounterUtils_h */
