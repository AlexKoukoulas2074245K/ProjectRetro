//
//  CameraSingletonComponent.h
//  ProjectRetro
//
//  Created by Alex Koukoulas on 28/03/2019.
//

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#ifndef CameraSingletonComponent_h
#define CameraSingletonComponent_h

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include "../../ECS.h"
#include "../../common/utils/MathUtils.h"

#include <array>

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

static const unsigned int CAMERA_FRUSTUM_SIDES = 6;

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

using CameraFrustum = std::array<glm::vec4, CAMERA_FRUSTUM_SIDES>;

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

class CameraSingletonComponent final: public ecs::IComponent
{
public:
    CameraFrustum mFrustum;
    glm::mat4 mViewMatrix       = glm::mat4(1.0f);
    glm::mat4 mProjectionMatrix = glm::mat4(1.0f);
    glm::vec3 mPosition         = glm::vec3(0.0f, 18.4f, 0.0f);
    glm::vec3 mFocusPosition    = glm::vec3(0.0f, 0.0f, 0.0f);
    glm::vec3 mUpVector         = glm::vec3(0.0f, 1.0f, 0.0f);
    float mFieldOfView          = math::PI/6.0f;
    float mZNear                = 0.01f;
    float mZFar                 = 100.0f;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#endif /* CameraSingletonComponent_h */
