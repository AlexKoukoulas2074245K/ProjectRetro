//
//  RenderingSystem.h
//  ProjectRetro
//
//  Created by Alex Koukoulas on 28/03/2019.
//

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#ifndef RenderingSystem_h
#define RenderingSystem_h

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include "../../common/utils/StringUtils.h"
#include "../../ECS.h"

#include <set>
#include <string>
#include <glm/vec4.hpp>

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

class RenderingSystem final: public ecs::BaseSystem
{
public:
    RenderingSystem(ecs::World& world);
    
    void VUpdate(const float dt) override;

private:
    void InitializeRenderingWindowAndContext();
    void InitializeCamera();
    void CompileAndLoadShaders();
    
    std::set<std::string> GetAndFilterShaderNames() const;

private:
    static const StringId  WORLD_MARIX_UNIFORM_NAME;
    static const StringId  VIEW_MARIX_UNIFORM_NAME;
    static const StringId  PROJECTION_MARIX_UNIFORM_NAME;
    static const glm::vec4 CLEAR_COLOR;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#endif /* RenderingSystem_h */
