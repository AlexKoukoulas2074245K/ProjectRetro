//
//  OpponentIntroTextEncounterFlowState.cpp
//  ProjectRetro
//
//  Created by Alex Koukoulas on 25/06/2019.
//

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include "OpponentIntroTextEncounterFlowState.h"
#include "../components/EncounterStateSingletonComponent.h"
#include "../../common/utils/TextboxUtils.h"

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

OpponentIntroTextEncounterFlowState::OpponentIntroTextEncounterFlowState(ecs::World& world)
    : BaseEncounterFlowState(world)
{
    const auto& encounterStateComponent = mWorld.GetSingletonComponent<EncounterStateSingletonComponent>();
    const auto overlaidChatboxEntityId  = CreateChatbox(mWorld);
    
    if (encounterStateComponent.mActiveEncounterType == EncounterType::WILD)
    {
        const auto wildPokemonName = encounterStateComponent.mOpponentPokemonRoster.front().mName;
        QueueDialogForTextbox(overlaidChatboxEntityId, "Wild " + wildPokemonName.GetString() + "#appeared!#END", mWorld);
    }
    
    
}

void OpponentIntroTextEncounterFlowState::VUpdate(const float)
{
    //CompleteAndTransitionTo<OpponentIntroTextEncounterFlowState>();
}

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
